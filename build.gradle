plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'

    id 'jacoco'
}

configurations {
    ktlint
}

group = 'ingsis'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/ingsis-group10-2024/printscript")
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}
dependencies {
    implementation 'printscript:common:2.1.10-SNAPSHOT'
    implementation 'printscript:cli:2.1.10-SNAPSHOT'
    implementation 'printscript:parser:2.1.10-SNAPSHOT'
    implementation 'printscript:lexer:2.1.10-SNAPSHOT'
    implementation 'printscript:interpreter:2.1.10-SNAPSHOT'
    implementation 'printscript:formatter:2.1.10-SNAPSHOT'
    implementation 'printscript:sca:2.1.10-SNAPSHOT'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.postgresql:postgresql:42.7.3'
    ktlint 'com.pinterest.ktlint:ktlint-cli:1.3.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.okta.spring:okta-spring-boot-starter:3.0.5'
    implementation("org.springframework.boot:spring-boot-starter-security")

}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}


tasks.register('copyPreCommitHook', Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

tasks.named("build") {
    dependsOn tasks.named("copyPreCommitHook")
}

tasks.register("ktlintCheck", JavaExec) {
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    args "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.named("check") {
    dependsOn tasks.named("ktlintCheck")
}

tasks.register("ktlintFormat", JavaExec) {
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
    args "-F", "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}
